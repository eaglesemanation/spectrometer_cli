[package]
name = "spectrometer_sbc"
version.workspace = true
authors.workspace = true
license.workspace = true
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
ccd_lcamv06 = { path = "../ccd_lcamv06", features = ["std"] }
rppal = { version = "0.14", optional = true }
serialport = { version = "4.2", optional = true, default-features = false }
axum = { version = "0.6", optional = true }
console_error_panic_hook = "0.1"
console_log = "1"
cfg-if = "1"
leptos = { git = "https://github.com/leptos-rs/leptos.git", branch = "main", features = ["serde"] }
leptos_axum = { git = "https://github.com/leptos-rs/leptos.git", branch = "main", optional = true }
leptos_meta = { git = "https://github.com/leptos-rs/leptos.git", branch = "main" }
leptos_router = { git = "https://github.com/leptos-rs/leptos.git", branch = "main" }
tokio = { version = "1.25", optional = true }
tower = { version = "0.4", optional = true }
tower-http = { version = "0.4", features = ["fs"], optional = true }
wasm-bindgen = "=0.2.84"
thiserror = "1.0"
tracing = { version = "0.1", optional = true }
http = "0.2"
serde-wasm-bindgen = "0.4"
serde = {version = "1.0", features = ["derive"]}
uuid = {version = "1.3", features = ["v4", "js"]}
log = "0.4"
log4rs = {version = "1.2", optional = true}
web-sys = {version = "0.3", features = ["File", "FileList", "HtmlInputElement", "Blob"]}
wasm-bindgen-futures = "0.4"
js-sys = "0.3"

[build-dependencies]
dotenvy = "0.15"

[features]
default=["ssr", "nightly"]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = [
    "dep:axum",
    "dep:rppal",
    "dep:serialport",
    "dep:tokio",
    "dep:tower",
    "dep:tower-http",
    "dep:leptos_axum",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "dep:tracing",
    "dep:log4rs"
]
nightly = [
    "leptos/nightly",
    "leptos_meta/nightly",
    "leptos_router/nightly"
]

[package.metadata.cargo-all-features]
denylist = [
    "axum",
    "tokio",
    "tower",
    "tower-http",
    "leptos_axum",
]
skip_feature_sets = [["ssr", "hydrate"]]

[package.metadata.leptos]
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/output.css"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "pnpx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
bin-features = ["ssr", "nightly"]
lib-features = ["hydrate", "nightly"]
